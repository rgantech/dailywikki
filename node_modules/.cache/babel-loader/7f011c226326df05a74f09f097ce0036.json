{"ast":null,"code":"import { call, takeEvery, put } from \"redux-saga/effects\";\nimport Axios from \"axios\";\nimport { fetchData, fetchedData } from \"../../Store\";\nimport { PopularArticlesSagaAction } from \"./PopularArticlesSagaAction\";\n\nlet callAPI = async _ref => {\n  let {\n    url,\n    method,\n    data\n  } = _ref;\n  return await Axios({\n    url,\n    method,\n    data\n  });\n};\n\nexport function* fetchDataSaga() {\n  try {\n    const today = new Date();\n    const month = (\"0\" + Math.floor(today.getMonth() + 1)).slice(-2);\n    let result = yield call(() => //callAPI({ url: `https://wikimedia.org/api/rest_v1/metrics/pageviews/top/en.wikipedia/all-access/${today.getFullYear()}/${month}/${Math.floor(today.getDate()-2)}` })\n    callAPI({\n      url: `https://api.wikimedia.org/feed/v1/wikipedia/en/featured/${today.getFullYear()}/${month}/${Math.floor(today.getDate())}`\n    }));\n    yield put(fetchData(result.data));\n  } catch (e) {\n    yield put({\n      type: \"TODO_FETCH_FAILED\"\n    });\n  }\n}\nexport default function* PopularArticlesSaga() {\n  yield put(fetchedData(true));\n  yield takeEvery(\"FETCH_DATA_SAGA\", fetchDataSaga);\n}\n_c = PopularArticlesSaga;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopularArticlesSaga\");","map":{"version":3,"names":["call","takeEvery","put","Axios","fetchData","fetchedData","PopularArticlesSagaAction","callAPI","url","method","data","fetchDataSaga","today","Date","month","Math","floor","getMonth","slice","result","getFullYear","getDate","e","type","PopularArticlesSaga"],"sources":["/data/Rohit Gautam 450/React/React Projects/p/dailywikki/src/Redux/Features/PopularArticles/PopularArticlesSaga.js"],"sourcesContent":["import { call, takeEvery, put } from \"redux-saga/effects\";\nimport Axios from \"axios\";\nimport { fetchData, fetchedData } from \"../../Store\";\nimport { PopularArticlesSagaAction } from \"./PopularArticlesSagaAction\";\n\nlet callAPI = async ({ url, method, data }) => {\n  return await Axios({\n    url,\n    method,\n    data\n  });\n};\n\nexport function* fetchDataSaga() {\n\n  try {\n    const today = new Date();\n    const month = (\"0\" + Math.floor(today.getMonth()+1)).slice(-2) \n    let result = yield call(() =>\n      //callAPI({ url: `https://wikimedia.org/api/rest_v1/metrics/pageviews/top/en.wikipedia/all-access/${today.getFullYear()}/${month}/${Math.floor(today.getDate()-2)}` })\n        callAPI({url: `https://api.wikimedia.org/feed/v1/wikipedia/en/featured/${today.getFullYear()}/${month}/${Math.floor(today.getDate())}`})\n      );\n    yield put(fetchData(result.data));\n  } catch (e) {\n    yield put({ type: \"TODO_FETCH_FAILED\" });\n  }\n}\n\nexport default function* PopularArticlesSaga() {\n  yield put(fetchedData(true));\n  yield takeEvery(\"FETCH_DATA_SAGA\", fetchDataSaga);\n}\n"],"mappings":"AAAA,SAASA,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,WAApB,QAAuC,aAAvC;AACA,SAASC,yBAAT,QAA0C,6BAA1C;;AAEA,IAAIC,OAAO,GAAG,cAAiC;EAAA,IAA1B;IAAEC,GAAF;IAAOC,MAAP;IAAeC;EAAf,CAA0B;EAC7C,OAAO,MAAMP,KAAK,CAAC;IACjBK,GADiB;IAEjBC,MAFiB;IAGjBC;EAHiB,CAAD,CAAlB;AAKD,CAND;;AAQA,OAAO,UAAUC,aAAV,GAA0B;EAE/B,IAAI;IACF,MAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;IACA,MAAMC,KAAK,GAAG,CAAC,MAAMC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACK,QAAN,KAAiB,CAA5B,CAAP,EAAuCC,KAAvC,CAA6C,CAAC,CAA9C,CAAd;IACA,IAAIC,MAAM,GAAG,MAAMnB,IAAI,CAAC,MACtB;IACEO,OAAO,CAAC;MAACC,GAAG,EAAG,2DAA0DI,KAAK,CAACQ,WAAN,EAAoB,IAAGN,KAAM,IAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACS,OAAN,EAAX,CAA4B;IAA7H,CAAD,CAFY,CAAvB;IAIA,MAAMnB,GAAG,CAACE,SAAS,CAACe,MAAM,CAACT,IAAR,CAAV,CAAT;EACD,CARD,CAQE,OAAOY,CAAP,EAAU;IACV,MAAMpB,GAAG,CAAC;MAAEqB,IAAI,EAAE;IAAR,CAAD,CAAT;EACD;AACF;AAED,eAAe,UAAUC,mBAAV,GAAgC;EAC7C,MAAMtB,GAAG,CAACG,WAAW,CAAC,IAAD,CAAZ,CAAT;EACA,MAAMJ,SAAS,CAAC,iBAAD,EAAoBU,aAApB,CAAf;AACD;KAHwBa,mB"},"metadata":{},"sourceType":"module"}