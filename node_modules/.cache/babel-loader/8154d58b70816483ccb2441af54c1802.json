{"ast":null,"code":"import { call, takeEvery, put } from \"redux-saga/effects\";\nimport Axios from \"axios\";\nimport { fetchedNews } from \"../../Store\";\nimport { NewsLatestAction } from \"./NewsLatestAction\";\n\nlet callAPI = async _ref => {\n  let {\n    url,\n    method,\n    data,\n    params\n  } = _ref;\n  return await Axios({\n    url,\n    method,\n    data,\n    params\n  });\n};\n\nexport function* fetchNewsLatestSaga(blogTitle) {\n  try {\n    const today = new Date();\n    const month = (\"0\" + Math.floor(today.getMonth() + 1)).slice(-2);\n    let result = yield call(() => callAPI({\n      url: `https://api.wikimedia.org/feed/v1/wikipedia/en/featured/${today.getFullYear()}/${month}/${Math.floor(today.getDate())}`\n    }));\n    yield put(fetchedNews(result.data));\n  } catch (e) {\n    yield put({\n      type: \"TODO_FETCH_FAILED\"\n    });\n  }\n}\nexport default function* NewsLatestSaga() {\n  yield takeEvery(\"FETCH_FEATURED_DATA_SAGA\", fetchNewsLatestSaga);\n}\n_c = NewsLatestSaga;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsLatestSaga\");","map":{"version":3,"names":["call","takeEvery","put","Axios","fetchedNews","NewsLatestAction","callAPI","url","method","data","params","fetchNewsLatestSaga","blogTitle","today","Date","month","Math","floor","getMonth","slice","result","getFullYear","getDate","e","type","NewsLatestSaga"],"sources":["/data/Rohit Gautam 450/React/React Projects/dailywikki/src/Redux/Features/NewsLatest/NewsLatestSaga.js"],"sourcesContent":["import { call, takeEvery, put } from \"redux-saga/effects\";\nimport Axios from \"axios\";\nimport { fetchedNews } from \"../../Store\";\nimport { NewsLatestAction } from \"./NewsLatestAction\";\n\n\nlet callAPI = async ({ url, method, data,params }) => {\n  return await Axios({\n    url,\n    method,\n    data,\n    params\n  });\n};\n\nexport function* fetchNewsLatestSaga(blogTitle) {\n  try {\n    const today = new Date();\n    const month = (\"0\" + Math.floor(today.getMonth()+1)).slice(-2) \n    let result = yield call(() =>\n    callAPI({url: `https://api.wikimedia.org/feed/v1/wikipedia/en/featured/${today.getFullYear()}/${month}/${Math.floor(today.getDate())}`})\n    );\n    yield put(fetchedNews(result.data));\n  } catch (e) {\n    yield put({ type: \"TODO_FETCH_FAILED\" });\n  }\n}\n\nexport default function* NewsLatestSaga() {\n  yield takeEvery(\"FETCH_FEATURED_DATA_SAGA\", fetchNewsLatestSaga);\n  \n}\n"],"mappings":"AAAA,SAASA,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,gBAAT,QAAiC,oBAAjC;;AAGA,IAAIC,OAAO,GAAG,cAAwC;EAAA,IAAjC;IAAEC,GAAF;IAAOC,MAAP;IAAeC,IAAf;IAAoBC;EAApB,CAAiC;EACpD,OAAO,MAAMP,KAAK,CAAC;IACjBI,GADiB;IAEjBC,MAFiB;IAGjBC,IAHiB;IAIjBC;EAJiB,CAAD,CAAlB;AAMD,CAPD;;AASA,OAAO,UAAUC,mBAAV,CAA8BC,SAA9B,EAAyC;EAC9C,IAAI;IACF,MAAMC,KAAK,GAAG,IAAIC,IAAJ,EAAd;IACA,MAAMC,KAAK,GAAG,CAAC,MAAMC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACK,QAAN,KAAiB,CAA5B,CAAP,EAAuCC,KAAvC,CAA6C,CAAC,CAA9C,CAAd;IACA,IAAIC,MAAM,GAAG,MAAMpB,IAAI,CAAC,MACxBM,OAAO,CAAC;MAACC,GAAG,EAAG,2DAA0DM,KAAK,CAACQ,WAAN,EAAoB,IAAGN,KAAM,IAAGC,IAAI,CAACC,KAAL,CAAWJ,KAAK,CAACS,OAAN,EAAX,CAA4B;IAA7H,CAAD,CADgB,CAAvB;IAGA,MAAMpB,GAAG,CAACE,WAAW,CAACgB,MAAM,CAACX,IAAR,CAAZ,CAAT;EACD,CAPD,CAOE,OAAOc,CAAP,EAAU;IACV,MAAMrB,GAAG,CAAC;MAAEsB,IAAI,EAAE;IAAR,CAAD,CAAT;EACD;AACF;AAED,eAAe,UAAUC,cAAV,GAA2B;EACxC,MAAMxB,SAAS,CAAC,0BAAD,EAA6BU,mBAA7B,CAAf;AAED;KAHwBc,c"},"metadata":{},"sourceType":"module"}