{"ast":null,"code":"import { call, takeEvery, put } from \"redux-saga/effects\";\nimport Axios from \"axios\";\nimport { fetchArticle, fetchingArticle } from \"../../Store\";\nimport { SingleArticleAction, SingleArticleName } from \"./SingleArticleAction\";\n\nlet callAPI = async _ref => {\n  let {\n    url,\n    method,\n    data,\n    params\n  } = _ref;\n  return await Axios({\n    url,\n    method,\n    data,\n    params\n  });\n};\n\nexport function* fetchArticleSaga(blogTitle) {\n  try {\n    let result = yield call(() => callAPI({\n      url: `https://en.wikipedia.org/w/api.php?action=parse&format=json&page=${blogTitle.payload}&prop=text&origin=*&formatversion=2`\n    }));\n    yield put(fetchArticle(result.data));\n  } catch (e) {\n    yield put({\n      type: \"TODO_FETCH_FAILED\"\n    });\n  }\n}\nexport default function* SingleArticleSaga() {\n  yield put(fetchingArticle(true));\n  yield takeEvery(\"FETCH_SINGLE_DATA_SAGA\", fetchArticleSaga);\n}\n_c = SingleArticleSaga;\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleArticleSaga\");","map":{"version":3,"names":["call","takeEvery","put","Axios","fetchArticle","fetchingArticle","SingleArticleAction","SingleArticleName","callAPI","url","method","data","params","fetchArticleSaga","blogTitle","result","payload","e","type","SingleArticleSaga"],"sources":["/data/Rohit Gautam 450/React/React Projects/dailywikki/src/Redux/Features/SingleArticle/SingleArticleSaga.js"],"sourcesContent":["import { call, takeEvery, put } from \"redux-saga/effects\";\nimport Axios from \"axios\";\nimport { fetchArticle, fetchingArticle } from \"../../Store\";\nimport { SingleArticleAction, SingleArticleName } from \"./SingleArticleAction\";\n\n\nlet callAPI = async ({ url, method, data,params }) => {\n  return await Axios({\n    url,\n    method,\n    data,\n    params\n  });\n};\n\nexport function* fetchArticleSaga(blogTitle) {\n  try {\n    let result = yield call(() =>\n      callAPI({ url: `https://en.wikipedia.org/w/api.php?action=parse&format=json&page=${blogTitle.payload}&prop=text&origin=*&formatversion=2`,\n    })\n    );\n    \n    yield put(fetchArticle(result.data));\n  } catch (e) {\n    yield put({ type: \"TODO_FETCH_FAILED\" });\n  }\n}\n\nexport default function* SingleArticleSaga() {\n  yield put(fetchingArticle(true));\n  yield takeEvery(\"FETCH_SINGLE_DATA_SAGA\", fetchArticleSaga);\n  \n}\n"],"mappings":"AAAA,SAASA,IAAT,EAAeC,SAAf,EAA0BC,GAA1B,QAAqC,oBAArC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,EAAuBC,eAAvB,QAA8C,aAA9C;AACA,SAASC,mBAAT,EAA8BC,iBAA9B,QAAuD,uBAAvD;;AAGA,IAAIC,OAAO,GAAG,cAAwC;EAAA,IAAjC;IAAEC,GAAF;IAAOC,MAAP;IAAeC,IAAf;IAAoBC;EAApB,CAAiC;EACpD,OAAO,MAAMT,KAAK,CAAC;IACjBM,GADiB;IAEjBC,MAFiB;IAGjBC,IAHiB;IAIjBC;EAJiB,CAAD,CAAlB;AAMD,CAPD;;AASA,OAAO,UAAUC,gBAAV,CAA2BC,SAA3B,EAAsC;EAC3C,IAAI;IACF,IAAIC,MAAM,GAAG,MAAMf,IAAI,CAAC,MACtBQ,OAAO,CAAC;MAAEC,GAAG,EAAG,oEAAmEK,SAAS,CAACE,OAAQ;IAA7F,CAAD,CADc,CAAvB;IAKA,MAAMd,GAAG,CAACE,YAAY,CAACW,MAAM,CAACJ,IAAR,CAAb,CAAT;EACD,CAPD,CAOE,OAAOM,CAAP,EAAU;IACV,MAAMf,GAAG,CAAC;MAAEgB,IAAI,EAAE;IAAR,CAAD,CAAT;EACD;AACF;AAED,eAAe,UAAUC,iBAAV,GAA8B;EAC3C,MAAMjB,GAAG,CAACG,eAAe,CAAC,IAAD,CAAhB,CAAT;EACA,MAAMJ,SAAS,CAAC,wBAAD,EAA2BY,gBAA3B,CAAf;AAED;KAJwBM,iB"},"metadata":{},"sourceType":"module"}